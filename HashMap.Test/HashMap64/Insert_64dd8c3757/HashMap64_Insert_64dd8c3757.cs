// Test generated by RoostGPT for test se-code using AI Type Open AI and AI Model gpt-4

using System;
using NUnit.Framework;
using System.Collections.Generic;

namespace HashMapNamespace.Test
{
    [TestFixture]
    public class HashMap64_Insert_64dd8c3757
    {
        private Dictionary<long, string> hashMap;

        [SetUp]
        public void Setup()
        {
            hashMap = new Dictionary<long, string>();
        }

        [Test]
        public void Insert_WhenCalledWithNewKey_ShouldIncreaseCount()
        {
            hashMap.Add(1, "value1");

            Assert.AreEqual(1, hashMap.Count);
        }

        [Test]
        public void Insert_WhenCalledWithExistingKey_ShouldThrowArgumentException()
        {
            hashMap.Add(1, "value1");

            Assert.Throws<ArgumentException>(() => hashMap.Add(1, "value2"));
        }

        [Test]
        public void Insert_WhenCalledWithDifferentKeys_ShouldNotThrowException()
        {
            hashMap.Add(1, "value1");

            Assert.DoesNotThrow(() => hashMap.Add(2, "value2"));
        }

        [Test]
        public void Insert_WhenCalledWithMaximumLongValue_ShouldNotThrowException()
        {
            Assert.DoesNotThrow(() => hashMap.Add(long.MaxValue, "value1"));
        }

        [Test]
        public void Insert_WhenCalledWithMinimumLongValue_ShouldNotThrowException()
        {
            Assert.DoesNotThrow(() => hashMap.Add(long.MinValue, "value1"));
        }

        [TearDown]
        public void Teardown()
        {
            hashMap = null;
        }
    }
}
